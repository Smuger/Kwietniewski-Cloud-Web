{"version":3,"file":"component---src-pages-tummy-tracker-index-tsx-def6d07ea7f3ec6cded6.js","mappings":"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","sources":["webpack://Kwietniewski/./src/pages/tummy-tracker/index.tsx","webpack://Kwietniewski/./node_modules/@chakra-ui/button/dist/chunk-T6ZDZOLO.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/button/dist/chunk-3RENZ2UO.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/button/dist/chunk-QB2Y5VKH.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/react-use-merge-refs/dist/index.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/button/dist/chunk-UVUR7MCU.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/button/dist/chunk-J37R6SZE.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/layout/dist/chunk-ZFQCCYWD.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/layout/dist/chunk-ZHMYA64R.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/layout/dist/chunk-5VJV6UNA.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/react-children-utils/dist/index.mjs"],"sourcesContent":["import React from \"react\"\nimport { PageProps, Link } from \"gatsby\"\nimport SEO from \"../../components/seo\"\nimport { Text, Center, Button, Stack } from \"@chakra-ui/react\"\nimport '../../styles/styles.css';\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => {\n\n  return (\n    <>\n      <SEO title=\"Kwietniewski\" />\n      <Center h='calc(100vh)' >\n\n        <Button colorScheme='whiteAlpha' variant='ghost'>\n          <Stack spacing={3}>\n            <Link to=\"/tummy-tracker/privacy\">\n              <Text mt={4} color='whiteAlpha.900' fontSize='3xl'>Privacy</Text>\n            </Link>\n            <Link to=\"/tummy-tracker/support\">\n              <Text mt={4} color='whiteAlpha.900' fontSize='3xl'>Support</Text>\n            </Link>\n          </Stack>\n        </Button>\n      </Center>\n    </>\n  )\n}\n\nexport default UsingTypescript\n\n// export const query = graphql`\n//   {\n//     site {\n//       buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n//     }\n//   }\n// `","'use client'\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroup\n};\n//# sourceMappingURL=chunk-T6ZDZOLO.mjs.map","'use client'\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { cloneElement, isValidElement } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.span,\n    {\n      display: \"inline-flex\",\n      alignSelf: \"center\",\n      flexShrink: 0,\n      ...rest,\n      className: _className,\n      children: _children\n    }\n  );\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\nexport {\n  ButtonIcon\n};\n//# sourceMappingURL=chunk-3RENZ2UO.mjs.map","'use client'\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra } from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ jsx(Spinner, { color: \"currentColor\", width: \"1em\", height: \"1em\" }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(\n    () => ({\n      display: \"flex\",\n      alignItems: \"center\",\n      position: label ? \"relative\" : \"absolute\",\n      [marginProp]: label ? spacing : 0,\n      fontSize: \"1em\",\n      lineHeight: \"normal\",\n      ...__css\n    }),\n    [__css, label, marginProp, spacing]\n  );\n  return /* @__PURE__ */ jsx(chakra.div, { className: _className, ...rest, __css: spinnerStyles, children });\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\nexport {\n  ButtonSpinner\n};\n//# sourceMappingURL=chunk-QB2Y5VKH.mjs.map","'use client'\n\n// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n//# sourceMappingURL=index.mjs.map","'use client'\nimport {\n  useButtonType\n} from \"./chunk-J37R6SZE.mjs\";\nimport {\n  useButtonGroup\n} from \"./chunk-T6ZDZOLO.mjs\";\nimport {\n  ButtonIcon\n} from \"./chunk-3RENZ2UO.mjs\";\nimport {\n  ButtonSpinner\n} from \"./chunk-QB2Y5VKH.mjs\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useMemo } from \"react\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ jsxs(\n    chakra.button,\n    {\n      ref: useMergeRefs(ref, _ref),\n      as,\n      type: type != null ? type : defaultType,\n      \"data-active\": dataAttr(isActive),\n      \"data-loading\": dataAttr(isLoading),\n      __css: buttonStyles,\n      className: cx(\"chakra-button\", className),\n      ...rest,\n      disabled: isDisabled || isLoading,\n      children: [\n        isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--start\",\n            label: loadingText,\n            placement: \"start\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        ),\n        isLoading ? loadingText || /* @__PURE__ */ jsx(chakra.span, { opacity: 0, children: /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }) }) : /* @__PURE__ */ jsx(ButtonContent, { ...contentProps }),\n        isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ jsx(\n          ButtonSpinner,\n          {\n            className: \"chakra-button__spinner--end\",\n            label: loadingText,\n            placement: \"end\",\n            spacing: iconSpacing,\n            children: spinner\n          }\n        )\n      ]\n    }\n  );\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ jsxs(Fragment, { children: [\n    leftIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginEnd: iconSpacing, children: leftIcon }),\n    children,\n    rightIcon && /* @__PURE__ */ jsx(ButtonIcon, { marginStart: iconSpacing, children: rightIcon })\n  ] });\n}\n\nexport {\n  Button\n};\n//# sourceMappingURL=chunk-UVUR7MCU.mjs.map","'use client'\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport {\n  useButtonType\n};\n//# sourceMappingURL=chunk-J37R6SZE.mjs.map","'use client'\n\n// src/stack/stack-item.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar StackItem = (props) => /* @__PURE__ */ jsx(\n  chakra.div,\n  {\n    className: \"chakra-stack__item\",\n    ...props,\n    __css: {\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"]\n    }\n  }\n);\nStackItem.displayName = \"StackItem\";\n\nexport {\n  StackItem\n};\n//# sourceMappingURL=chunk-ZFQCCYWD.mjs.map","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","'use client'\nimport {\n  StackItem\n} from \"./chunk-ZFQCCYWD.mjs\";\nimport {\n  getDividerStyles\n} from \"./chunk-5VJV6UNA.mjs\";\n\n// src/stack/stack.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: direction,\n      flexWrap: wrap,\n      gap: hasDivider ? void 0 : spacing,\n      className: _className,\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n//# sourceMappingURL=chunk-ZHMYA64R.mjs.map","'use client'\n\n// src/stack/stack.utils.tsx\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nfunction getDividerStyles(options) {\n  const { spacing, direction } = options;\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\"\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0\n    }\n  };\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value) => dividerStyles[value]\n    )\n  };\n}\n\nexport {\n  getDividerStyles\n};\n//# sourceMappingURL=chunk-5VJV6UNA.mjs.map","// src/index.ts\nimport { Children, isValidElement } from \"react\";\nfunction getValidChildren(children) {\n  return Children.toArray(children).filter(\n    (child) => isValidElement(child)\n  );\n}\nexport {\n  getValidChildren\n};\n"],"names":["_ref","data","path","React","SEO","title","Center","h","Button","colorScheme","variant","Stack","spacing","Link","to","Text","mt","color","fontSize","ButtonGroupProvider","useButtonGroup","strict","name","ButtonIcon","props","children","className","rest","_children","isValidElement","cloneElement","focusable","_className","cx","jsx","span","display","alignSelf","flexShrink","displayName","ButtonSpinner","label","placement","width","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","lineHeight","div","mergeRefs","refs","node","forEach","ref","value","current","error","Error","assignRef","useMergeRefs","group","styles","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","type","spinner","spinnerPlacement","as","buttonStyles","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","defaultType","isButton","setIsButton","useState","useCallback","tagName","useButtonType","contentProps","jsxs","button","disabled","opacity","ButtonContent","Fragment","marginEnd","marginStart","StackItem","flex","minWidth","Object","freeze","isInline","direction","directionProp","align","justify","wrap","divider","shouldWrapChildren","dividerStyle","options","dividerStyles","column","my","mx","borderLeftWidth","borderBottomWidth","row","prop","mapper","Array","isArray","map","item","keys","reduce","result","key","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","child","index","isLast","length","_child","clonedDivider","_divider","flexDirection","flexWrap","gap","getValidChildren","Children","toArray","filter"],"sourceRoot":""}