{"version":3,"file":"component---src-pages-custom-theme-ts-ef7f04dba9b6183d8041.js","mappings":"4KAEIA,EAA0B,CAC5B,UACA,cACA,SACA,aACA,SACA,YACA,QACA,YACA,cACA,iBACA,cACA,QACA,UACA,QACA,QACA,SACA,aACA,Y,wBCbF,SAASC,EAAWC,GAClB,MAAwB,mBAAVA,CAChB,CAIA,IAAIC,EAAqBC,GAChB,YAAyBC,GAC9B,IAAIC,EAAY,IAAID,GAChBE,EAAcF,EAAWA,EAAWG,OAAS,GDMrD,IAAuBC,ECEnB,ODFmBA,ECLDF,GDMf,QAASE,IAGPT,EAAwBU,OAC5BC,GAAiBC,OAAOC,UAAUC,eAAeC,KAAKN,EAAME,MCR7DL,EAAUE,OAAS,EACjBF,EAAYA,EAAUU,MAAM,EAAGV,EAAUE,OAAS,GAElDD,EAAcH,EAZpB,YAAiBa,GACf,OAAQC,GAAMD,EAAIE,QAAO,CAACC,EAAGC,IAAMA,EAAED,IAAIF,EAC3C,CAYWI,IACFhB,EAAUiB,KACVC,GAAeC,GAAcxB,EAAWuB,GAAaA,EAAUC,GAOxE,YAA+BnB,GAC7B,OAAO,EAAU,CAAC,KAAMA,EAAWoB,EACrC,CATqFC,CAAmBF,EAAWD,KAFxGF,CAILf,EACJ,EAEEqB,EAAczB,EAAkB,MACdA,EAAkB,MAIxC,SAASuB,EAAqBG,EAAQC,EAAUC,EAAKC,GACnD,IAAK/B,EAAW4B,IAAW5B,EAAW6B,KAAclB,OAAOC,UAAUC,eAAeC,KAAKiB,EAAQD,GAC/F,MAAO,IAAIE,KACT,MAAMC,EAAcjC,EAAW4B,GAAUA,KAAUI,GAAQJ,EACrDM,EAAgBlC,EAAW6B,GAAYA,KAAYG,GAAQH,EACjE,OAAO,EAAU,CAAC,EAAGI,EAAaC,EAAeT,EAAqB,CAI5E,CC7BA,MAdcE,EAAY,CACtBQ,OAAQ,CACJC,OAAQ,CACJC,KAAM,CACFC,GAAI,OACJC,MAAO,QAEXC,YAAa,CACTC,GAAI,Y","sources":["webpack://Kwietniewski/./node_modules/@chakra-ui/theme/dist/chunk-P56GPN75.mjs","webpack://Kwietniewski/./node_modules/@chakra-ui/theme-utils/dist/chunk-LIR5QAZY.mjs","webpack://Kwietniewski/./src/pages/customTheme.ts"],"sourcesContent":["// src/utils/is-chakra-theme.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar requiredChakraThemeKeys = [\n  \"borders\",\n  \"breakpoints\",\n  \"colors\",\n  \"components\",\n  \"config\",\n  \"direction\",\n  \"fonts\",\n  \"fontSizes\",\n  \"fontWeights\",\n  \"letterSpacings\",\n  \"lineHeights\",\n  \"radii\",\n  \"shadows\",\n  \"sizes\",\n  \"space\",\n  \"styles\",\n  \"transition\",\n  \"zIndices\"\n];\nfunction isChakraTheme(unit) {\n  if (!isObject(unit)) {\n    return false;\n  }\n  return requiredChakraThemeKeys.every(\n    (propertyName) => Object.prototype.hasOwnProperty.call(unit, propertyName)\n  );\n}\n\nexport {\n  requiredChakraThemeKeys,\n  isChakraTheme\n};\n//# sourceMappingURL=chunk-P56GPN75.mjs.map","// src/extend-theme.ts\nimport {\n  theme,\n  baseTheme,\n  isChakraTheme\n} from \"@chakra-ui/theme\";\nimport mergeWith from \"lodash.mergewith\";\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\nfunction pipe(...fns) {\n  return (v) => fns.reduce((a, b) => b(a), v);\n}\nvar createExtendTheme = (theme2) => {\n  return function extendTheme2(...extensions) {\n    let overrides = [...extensions];\n    let activeTheme = extensions[extensions.length - 1];\n    if (isChakraTheme(activeTheme) && // this ensures backward compatibility\n    // previously only `extendTheme(override, activeTheme?)` was allowed\n    overrides.length > 1) {\n      overrides = overrides.slice(0, overrides.length - 1);\n    } else {\n      activeTheme = theme2;\n    }\n    return pipe(\n      ...overrides.map(\n        (extension) => (prevTheme) => isFunction(extension) ? extension(prevTheme) : mergeThemeOverride(prevTheme, extension)\n      )\n    )(activeTheme);\n  };\n};\nvar extendTheme = createExtendTheme(theme);\nvar extendBaseTheme = createExtendTheme(baseTheme);\nfunction mergeThemeOverride(...overrides) {\n  return mergeWith({}, ...overrides, mergeThemeCustomizer);\n}\nfunction mergeThemeCustomizer(source, override, key, object) {\n  if ((isFunction(source) || isFunction(override)) && Object.prototype.hasOwnProperty.call(object, key)) {\n    return (...args) => {\n      const sourceValue = isFunction(source) ? source(...args) : source;\n      const overrideValue = isFunction(override) ? override(...args) : override;\n      return mergeWith({}, sourceValue, overrideValue, mergeThemeCustomizer);\n    };\n  }\n  return void 0;\n}\n\nexport {\n  extendTheme,\n  extendBaseTheme,\n  mergeThemeOverride\n};\n","import { extendTheme } from \"@chakra-ui/react\";\n\nconst Theme = extendTheme({\n    styles: {\n        global: {\n            body: {\n                bg: \"#000\",\n                color: \"#fff\"\n            },\n            breakpoints: {\n                sm: \"280px\",\n            },\n        },\n    },\n});\n\nexport default Theme;\n"],"names":["requiredChakraThemeKeys","isFunction","value","createExtendTheme","theme2","extensions","overrides","activeTheme","length","unit","every","propertyName","Object","prototype","hasOwnProperty","call","slice","fns","v","reduce","a","b","pipe","map","extension","prevTheme","mergeThemeCustomizer","mergeThemeOverride","extendTheme","source","override","key","object","args","sourceValue","overrideValue","styles","global","body","bg","color","breakpoints","sm"],"sourceRoot":""}